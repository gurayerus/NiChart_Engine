## Import packages
import pandas as pd
import os
import sys

## Flag to indicate rules that will be run locally (e.g. not submitted to slurm)
##localrules: rename_muse_rois
    
## Report data
report: "report/workflow.rst"

## Config file
configfile: "../../config/config_COMBAT.yaml"

###################################
## Out file names

OUT_CONFIG = expand("../../data/COMBAT/{vconf}/config/{cname}", cname = ["config_COMBAT.yaml", "list_MUSE_single.csv"], vconf = config["version"])

OUT_RESULTS = expand("../../data/COMBAT/{vconf}/data/NiChart_{dtype}_{ctype}.csv", dtype = config["roi_types"], ctype = config["corr_types"], vconf = config["version"])

OUT_FILES = OUT_CONFIG + OUT_RESULTS

print("Target out files:" + '\n' + '\n'.join(OUT_FILES))

###################################
## Rules

rule ALL:
    '''
    First rule: lists the final expected out files
    '''
    input: OUT_FILES

rule copy_config:
    '''
    Rule for copying config files to output dir
    '''
    input:
        "../../config/{cname}"
    output:
        expand("../../data/{dir_output}/config/{{cname}}", vconf = config["version"])
    shell:
        "cp -v {input} {output}"

rule select_vars:
    '''
    Select variables from data
    '''
    input:
        in_csv=expand("../../data/{dir_input}/combined/NiChart_{{dtype}}.csv", vinit = config["dir_input"]), 
        dict_csv=expand("../../config/{rtype}", rtype = config["list_MUSE_single"])
    params:
        dict_var = 'Code',
        vars='MRID,Age,Sex,SITE,DLICV',
    output:
        "../../data/{dir_output}/sel_vars/NiChart_{dtype}.csv"
    resources:
        mem_mb=8000
    shell:
        "python ../../utils/util_select_vars.py {input} {params} {output}"

rule select_COMBAT_sample:
    '''
    Select sample (using list)
    '''
    input:
        sample="../../data/samples/COMBAT/sample_COMBAT_ISTAG_train.csv",
        data="../../data/{dir_input}/sel_vars/NiChart_{dtype}.csv",
    params:
        key_var = 'MRID'
    output:
        "../../data/{dir_output}/data/NiChart_{dtype}.csv"
    resources:
        mem_mb=8000
    shell:
        "python ../../utils/util_merge_dfs.py {input} {params} {output}"

rule COMBAT_train:
    '''
    Train COMBAT model
    '''    
    input:
        "../../data/{dir_output}/data/NiChart_{dtype}.csv"
    params:
        batch='SITE',
        vkey='MRID',
        vnum='ICV',
        vcat='Sex',
        vspline='Age'
    output:
        mdl="../../data/{dir_output}/COMBATModel_NiChart_DLMUSE_{dtype}.pkl.gz",
        csv=temp("../../data/{dir_output}/NiChart_{dtype}_COMBATOut.csv")
    resources:
        mem_mb=16000
    shell:
        "echo neuroharm -a learn -i {input} -k {params.vkey} -b {params.batch} "
        "-n {params.vnum} -c {params.vcat} -s {params.vspline} -o {output.mdl} -u {output.csv}; "
        "neuroharm -a learn -i {input} -k {params.vkey} -b {params.batch} "
        "-n {params.vnum} -c {params.vcat} -s {params.vspline} -o {output.mdl} -u {output.csv}"

rule COMBAT_apply:
    '''
    Apply COMBAT COMBAT model to calculate harmonized values
    '''    
    input:
        data="../../data/COMBAT/h{hdata}/NiChart_DLMUSE_{dtype}_r{rtype}_{htype}.csv",
        mdl="../../data/COMBAT/h{hdata}/COMBATModel_NiChart_DLMUSE_{dtype}_r{rtype}.pkl.gz"
    output:
        csv=temp("../../data/COMBAT/h{hdata}/NiChart_DLMUSE_{dtype}_r{rtype}_{htype}_COMBATOut.csv")  
    resources:
        mem_mb=16000
    shell:
        "echo neuroharm -a apply -i {input.data} -m {input.mdl} -u {output.csv};"
        "neuroharm -a apply -i {input.data} -m {input.mdl} -u {output.csv}"

rule remove_COMBAT_suffix:
    '''
    Remove COMBAT suffix (_HARM)
    FIXME: Ideally COMBAT should be run with an arg to create output var names without a suffix
    '''        
    input:
        "../../data/COMBAT/h{hdata}/NiChart_DLMUSE_{dtype}_r{rtype}_{htype}_COMBATOut.csv",
    params:
        rm_suff='_HARM'
    output:
        temp("../../data/COMBAT/h{hdata}/NiChart_DLMUSE_{dtype}_r{rtype}_{htype}_COMBATOut_nosuffix.csv")
    resources:
        mem_mb=8000
    shell:
        "echo python utils/util_remove_suffix.py {input} {params} {output}; "
        "python utils/util_remove_suffix.py {input} {params} {output}; "
        
rule select_COMBAT_output_vars:
    '''
    Select final variables from the harmonized data (MRID + ICV + ROI names)
    '''        
    input:
        data="../../data/COMBAT/h{hdata}/NiChart_DLMUSE_{dtype}_r{rtype}_{htype}_COMBATOut_nosuffix.csv",
        rois="../../config/list_MUSE_{rtype}.csv"
    params:
        vars='MRID,ICV',
    output:
        csv=temp("../../data/COMBAT/h{hdata}/NiChart_DLMUSE_{dtype}_r{rtype}_{htype}_COMBATOut_nosuffix_rois.csv")
    resources:
        mem_mb=8000
    shell:
        "echo python utils/util_select_vars.py {input} {params} {output}; "
        "python utils/util_select_vars.py {input} {params} {output}; "

rule copy_COMBAT_model:
    '''
    Copy COMBAT model to models
    '''        
    input:
        "../../data/COMBAT/h{hdata}/COMBATModel_NiChart_DLMUSE_{dtype}_r{rtype}.pkl.gz"
    output:
        "../../models/COMBAT/COMBATModel_NiChart_DLMUSE_{dtype}_r{rtype}_h{hdata}.pkl.gz"
    resources:
        mem_mb=8000
    shell:
        "cp {input} {output}"

rule copy_harmonized_data:
    '''
    Copy harmonized data
    '''        
    input:
        "../../data/COMBAT/h{hdata}/NiChart_DLMUSE_{dtype}_r{rtype}_all_COMBATOut_nosuffix_rois.csv"
    output:
        "../../data/data_consolidated/NiChart_DLMUSE_harmonized_{dtype}_r{rtype}_h{hdata}.csv"
    resources:
        mem_mb=8000
    shell:
        "cp {input} {output}"


