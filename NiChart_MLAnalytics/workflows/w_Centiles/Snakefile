## Import packages
import pandas as pd

## Flag to indicate rules that will be run locally (e.g. not submitted to slurm)
localrules: copy_config, make_sample_list, select_sample, rename_rois, merge_data, rename_rois_subsampled, merge_data_subsampled, concat_studies, select_covars, select_roi_vars, merge_covars_to_rois, correct_icv, merge_covars_to_corr_rois
    
### Report data
#report: "report/workflow.rst"

## Config file
configfile: "../../config/config_vDemo_Centiles.yaml"

###################################
## Out file names

OUT_CONFIG = expand("../../data/{dir_output}/config/{cname}", cname = [config["config_name"],  config["list_covars"], config["list_ROIs"], config["list_studies_merge"]], dir_output = config["dir_output"])

OUT_RESULTS = expand("../../data/{dir_output}/final/combined_{dtype}_{ctype}.csv", dtype = config["roi_types"], ctype = config["corr_types"], dir_output = config["dir_output"])

OUT_FILES = OUT_CONFIG + OUT_RESULTS

print("Target out files:" + '\n' + '\n'.join(OUT_FILES) + '\n')

###################################
## Rules

rule ALL:
    '''
    First rule: lists the final expected out files
    '''
    input: OUT_FILES

rule copy_config:
    '''
    Rule for copying config files to output dir
    '''
    input:
        "../../config/{cname}"
    output:
        expand("../../data/{dir_output}/config/{{cname}}", dir_output = config["dir_output"])
    shell:
        "cp -v {input} {output}"
    
def get_centile_files(wildcards):
    '''
    Returns a list of centile csv files for all rois for a specific study
    '''
    cent_files = ['../../data/centiles/' + wildcards.ctype + '/centiles_per_roi/NiChartData_' + wildcards.dtype + '_var' + x + '.csv' for x in LIST_ROIS]
    return cent_files

def get_centile_files_from_file(wildcards):
    '''
    Returns a list of centile csv files for all rois for a specific study
    '''
    list_in = '../../data/centiles/c_' + wildcards.ctype + '/data_selrois/NiChartData_' + wildcards.dtype + '.csv'
    LIST_CURR_ROIS = pd.read_csv(list_in).columns[2:]
    cent_files = ['../../data/centiles/c_' + wildcards.ctype + '/centiles_single/NiChartData_' + wildcards.dtype + '_var' + x + '.csv' for x in LIST_CURR_ROIS]
    return cent_files

rule select_vars:
    '''
    Select variables from data
    '''
    input:
        in_csv=expand("../../data/{dir_input}/final/combined_{{dtype}}.csv", dir_input = config["dir_input"]), 
        dict_csv=expand("../../config/{rois}", rois = config["list_ROIs"])
    params:
        dict_var = 'Code',
        covars ='MRID,Age,Sex,SITE,DLICV',
    output:
        "../../data/{dir_output}/sel_vars/combined_{dtype}.csv"
    resources:
        mem_mb=8000
    shell:
        "python ../../utils/util_select_vars.py {input} {params} {output}"


rule select_sample_centile:
    '''
    Select MRID and Age for the specific centile sample
    '''
    input:
        demog="../../data/data_prep/DLMUSE_raw/data_combined/NiChartData.csv",
        sample="../../data/samples/sample_centiles_{ctype}_train.csv",
    output:
        "../../data/centiles/c_{ctype}/data/sample.csv"
    params:
        in_vars = 'MRID,Age'
    shell:
        "echo python utils/util_select_centile_sample.py {input} {params} {output}; "    
        "python utils/util_select_centile_sample.py {input} {params} {output}"    

rule merge_rois:
    '''
    Merge SPARE sample to DLMUSE data
    '''
    input:
        sample="../../data/centiles/c_{ctype}/data/sample.csv",
        data="../../data/data_consolidated/NiChartData_{dtype}.csv",
    output:
        "../../data/centiles/c_{ctype}/data/NiChartData_{dtype}.csv"
    params:
        key_var = 'MRID'
    shell:
        "echo python utils/util_merge_two.py {input} {params} {output}; "
        "python utils/util_merge_two.py {input} {params} {output}"

rule select_rois:
    '''
    Select roi values
    '''
    input:
        data="../../data/centiles/c_{ctype}/data/NiChartData_{dtype}.csv",
        roi="../../config/list_MUSE_primaryROI.csv",
    output:
        "../../data/centiles/c_{ctype}/data_selrois/NiChartData_{dtype}.csv"
    params:
        in_vars = 'MRID,Age',
    shell:
        "python utils/util_select_vars.py {input} {params} {output}"    
    
rule calc_centiles_single_var:
    input:
        "../../data/centiles/c_{ctype}/data_selrois/NiChartData_{dtype}.csv"
    output:
        temp("../../data/centiles/c_{ctype}/centiles_single/NiChartData_{dtype}_var{var}.csv")
    params:
        cent_vals='5,25,50,75,95',
        bin_size='1',
    shell:
        "echo Rscript ./utils/util_calc_centiles.r -i {input} -o {output} "
        "-t {wildcards.var} -c {params.cent_vals} -b {params.bin_size} -v; "
        "Rscript ./utils/util_calc_centiles.r -i {input} -o {output} "
        "-t {wildcards.var} -c {params.cent_vals} -b {params.bin_size} -v"

rule combine_centiles:
    input:
        get_centile_files_from_file
    output:
        protected("../../data/centiles/c_{ctype}/centiles_combined/NiChartData_{dtype}_centiles.csv")
    shell:
        "bash ./utils/util_combine_centiles.sh {output} {input}"

rule copy_centiles:
    input:
        "../../data/centiles/centiles-{csample}_combined.csv"
    output:
        protected("../../models/centiles/centiles-{csample}_combined.csv")
    shell:
        "bash ./utils/util_combine_centiles.sh {output} {input}"
