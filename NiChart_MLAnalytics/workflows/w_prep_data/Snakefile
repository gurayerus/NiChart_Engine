## Import packages
import pandas as pd
import os
import sys

## Flag to indicate rules that will be run locally (e.g. not submitted to slurm)
##localrules: rename_muse_rois
    
## Report data
report: "report/workflow.rst"

## Config file
configfile: "../../config/config_prep_data.yaml"

## Read study list from config
df = pd.read_csv("../../config/" + config["list_studies_merge"])
LIST_STUDIES = df.Study.tolist()

###################################
## Out file names

OUT_CONFIG = expand("../../data/{dir_output}/config/{cname}", cname = ["config_prep_data.yaml", "list_covar_all.csv", "list_MUSE_all.csv", "list_studies_merge.csv"], dir_output = config["dir_output"])

OUT_RESULTS = expand("../../data/{dir_output}/combined/NiChart_{dtype}_{ctype}.csv", dtype = config["roi_types"], ctype = config["corr_types"], dir_output = config["dir_output"])

OUT_FILES = OUT_CONFIG + OUT_RESULTS

print("Target out files:" + '\n' + '\n'.join(OUT_FILES))
input()

###################################
## Rules

rule ALL:
    '''
    First rule: lists the final expected out files
    '''
    input: OUT_FILES

rule copy_config:
    '''
    Rule for copying config files to output dir
    '''
    input:
        "../../config/{cname}"
    output:
        expand("../../data/{dir_output}/config/{{cname}}", dir_output = config["dir_output"])
    shell:
        "cp -v {input} {output}"
    
rule make_sample_list:
    '''
    Rule for selecting a smaller subset of a study dataset
    '''
    input:
        expand("../../data/{vinit}/Studies/{{study}}/{{study}}_DLMUSE.csv", vinit = config["dir_input"]),
    output:
        "../../data/{dir_output}/subsampled/{study}-n{num_sample}/sample_{study}-n{num_sample}.csv"
    params:
        out_vars = 'MRID',
    shell:
        "python ../../utils/util_subsample_df.py {input} {wildcards.num_sample} {params} {output}"

rule select_sample:
    '''
    Rule for creating data files with the selected sample
    '''
    input:
        in_csv=expand("../../data/{vinit}/Studies/{{study}}/{{study}}_{{dtype}}.csv", vinit = config["dir_input"]),
        in_list="../../data/{dir_output}/subsampled/{study}-n{num_sample}/sample_{study}-n{num_sample}.csv"
    output:
        "../../data/{dir_output}/subsampled/{study}-n{num_sample}/{study}-n{num_sample}_{dtype}.csv"
    params:
        key_var = 'MRID'
    shell:
        "python ../../utils/util_merge_dfs.py {input} {params} {output}"
    
rule rename_rois:
    '''
    Rename MUSE roi indices to roi codes
    '''
    input:
        roi=expand("../../data/{vinit}/Studies/{{study}}/{{study}}_{{dtype}}.csv", vinit = config["dir_input"]),
        dict=expand("../../config/{conf}", conf = config["list_MUSE_all"])
    output:
        temp("../../data/{dir_output}/renamed/{study}_{dtype}.csv")
    params:
        var_from = 'Index',
        var_to = 'Code'
    resources:
        mem_mb=8000
    shell:
        "python ../../utils/util_rename_df_columns.py {input} {params} {output}"

rule merge_data:
    '''
    Merge demog data to ROIs
    '''
    input:
        demog=expand("../../data/{vinit}/Studies/{{study}}/{{study}}_DemogClin.csv", vinit = config["dir_input"]),
        roi="../../data/{dir_output}/renamed/{study}_{dtype}.csv"
    params:
        key_var = 'MRID'
    output:
        temp("../../data/{dir_output}/merged/{study}_{dtype}.csv")
    resources:
        mem_mb=8000
    shell:
        "python ../../utils/util_merge_dfs.py {input} {params} {output}"

rule rename_rois_subsampled:
    '''
    Rename MUSE roi indices to roi codes for subsampled studies
    '''
    input:
        roi="../../data/{dir_output}/subsampled/{study}/{study}_{dtype}.csv",
        dict=expand("../../config/{conf}", conf = config["list_MUSE_all"])
    output:
        temp("../../data/{dir_output}/renamed/{study}_{dtype}.csv")
    params:
        var_from = 'Index',
        var_to = 'Code'
    resources:
        mem_mb=8000
    shell:
        "python ../../utils/util_rename_df_columns.py {input} {params} {output}"

rule merge_data_subsampled:
    '''
    Merge demog data to ROIs for subsampled studies
    '''
    input:
        demog="../../data/{dir_output}/subsampled/{study}/{study}_DemogClin.csv",
        roi="../../data/{dir_output}/renamed/{study}_{dtype}.csv"
    params:
        key_var = 'MRID'
    output:
        temp("../../data/{dir_output}/merged/{study}_{dtype}.csv")
    resources:
        mem_mb=8000
    shell:
        "python ../../utils/util_merge_dfs.py {input} {params} {output}"

rule concat_studies:
    '''
    Combine studies into a single csv
    '''
    input:
        expand("../../data/{{dir_output}}/merged/{study}_{{dtype}}.csv", study=LIST_STUDIES)
    params:
        key_var = 'MRID'
    output:
        temp("../../data/{dir_output}/combined/NiChart_{dtype}.csv")
    resources:
        mem_mb=8000
    shell:
        "python ../../utils/util_concat_dfs.py {output} {input}"

rule select_covars:
    '''
    Select variables from data
    '''
    input:
        in_csv="../../data/{dir_output}/combined/NiChart_{dtype}.csv",
        dict_csv=expand("../../config/{conf}", conf = config["list_covar_all"])        
    params:
        dict_var = 'Name',
        vars_list = 'MRID',
    output:
        "../../data/{dir_output}/covars/NiChart_{dtype}_covars.csv"
    resources:
        mem_mb=8000
    shell:
        "python ../../utils/util_select_vars.py {input} {params} {output}"

rule select_roi_vars:
    '''
    Select variables from data
    '''
    input:
        in_csv="../../data/{dir_output}/combined/NiChart_{dtype}.csv",
        dict=expand("../../config/{conf}", conf = config["list_MUSE_all"])
    params:
        dict_var = 'Code',
        vars_list = 'MRID',
    output:
        "../../data/{dir_output}/rois/NiChart_{dtype}_rois.csv"
    resources:
        mem_mb=8000
    shell:
        "python ../../utils/util_select_vars.py {input} {params} {output}"

ruleorder: merge_covars_to_rois > merge_covars_to_corr_rois
    
rule merge_covars_to_rois:
    '''
    Merge covars to ROIs
    '''
    input:
        covar="../../data/{dir_output}/covars/NiChart_{dtype}_covars.csv",
        roi="../../data/{dir_output}/rois/NiChart_{dtype}_rois.csv"
    params:
        key_var = 'MRID'
    output:
        "../../data/{dir_output}/combined/NiChart_{dtype}_raw.csv"
    resources:
        mem_mb=8000
    shell:
        "python ../../utils/util_merge_dfs.py {input} {params} {output}"

rule correct_icv:
    '''
    Normalize ROIs. Values are scaled either by a constant factor (NormICV) or 100 (PercICV)
    '''
    input:
        "../../data/{dir_output}/rois/NiChart_{dtype}_rois.csv"
    params:
        icv_var = 'MUSE_702',
        exclude_vars = 'MRID',
        suffix = 'NONE'
    output:
        "../../data/{dir_output}/corr_rois/NiChart_{dtype}_{corr_type}.csv"
    resources:
        mem_mb=8000
    shell:
        "python ../../utils/util_corr_icv.py {input} {wildcards.corr_type} {params} {output}"

rule merge_covars_to_corr_rois:
    '''
    Merge covars to ROIs
    '''
    input:
        covar="../../data/{dir_output}/covars/NiChart_{dtype}_covars.csv",
        roi="../../data/{dir_output}/corr_rois/NiChart_{dtype}_{ctype}.csv"
    params:
        key_var = 'MRID'
    output:
        "../../data/{dir_output}/combined/NiChart_{dtype}_{ctype}.csv"
    resources:
        mem_mb=8000
    shell:
        "python ../../utils/util_merge_dfs.py {input} {params} {output}"
